Ideas Child processors

Define the concept of preprocessor. In a preprocessor, "this" includes special methods,
such as "addChild", that will allow adding a child job in a given queue:

queue.preprocessor( async (job) => {
  await this.addChild('child-queue', { jobData });
});

queue.processor( (job) => {
  // If the preprocessor create dependencies by adding children,
  // the processor will not run until the dependencies are resolved.
});

How it works:

preprocessor is run instead of the processor, it should be idempotent!.
If dependencies are created, the job will be delayed until all dependencies are resolved.

The child jobs have been added to a different queue, and have a parent field.
the parent field is used to find the parent job.
When a child job is completed, it will update the parent "completed" field,
when completed reaches the total amount of children, the job is "promoted" from the
delay set and the processor is run normally as any other job. 

Data returned from children is passed to the job processor in the data object.

Note: Since we use the delay set, we could define TTL for the children, if they do not complete
in time, the job will still complete with the jobs that actually made it.
If children jobs failed, the parent will also complete, it is the parent
responsibility to act based on the results of the children.
